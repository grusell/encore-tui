// Package main provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package main

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for EncoreJobRequestBodyStatus.
const (
	EncoreJobRequestBodyStatusCANCELLED  EncoreJobRequestBodyStatus = "CANCELLED"
	EncoreJobRequestBodyStatusFAILED     EncoreJobRequestBodyStatus = "FAILED"
	EncoreJobRequestBodyStatusINPROGRESS EncoreJobRequestBodyStatus = "IN_PROGRESS"
	EncoreJobRequestBodyStatusNEW        EncoreJobRequestBodyStatus = "NEW"
	EncoreJobRequestBodyStatusQUEUED     EncoreJobRequestBodyStatus = "QUEUED"
	EncoreJobRequestBodyStatusSUCCESSFUL EncoreJobRequestBodyStatus = "SUCCESSFUL"
)

// Defines values for EntityModelEncoreJobStatus.
const (
	EntityModelEncoreJobStatusCANCELLED  EntityModelEncoreJobStatus = "CANCELLED"
	EntityModelEncoreJobStatusFAILED     EntityModelEncoreJobStatus = "FAILED"
	EntityModelEncoreJobStatusINPROGRESS EntityModelEncoreJobStatus = "IN_PROGRESS"
	EntityModelEncoreJobStatusNEW        EntityModelEncoreJobStatus = "NEW"
	EntityModelEncoreJobStatusQUEUED     EntityModelEncoreJobStatus = "QUEUED"
	EntityModelEncoreJobStatusSUCCESSFUL EntityModelEncoreJobStatus = "SUCCESSFUL"
)

// Defines values for InputType.
const (
	Audio      InputType = "Audio"
	AudioVideo InputType = "AudioVideo"
	Video      InputType = "Video"
)

// Defines values for ExecuteSearchEncorejobGetParamsStatus.
const (
	CANCELLED  ExecuteSearchEncorejobGetParamsStatus = "CANCELLED"
	FAILED     ExecuteSearchEncorejobGetParamsStatus = "FAILED"
	INPROGRESS ExecuteSearchEncorejobGetParamsStatus = "IN_PROGRESS"
	NEW        ExecuteSearchEncorejobGetParamsStatus = "NEW"
	QUEUED     ExecuteSearchEncorejobGetParamsStatus = "QUEUED"
	SUCCESSFUL ExecuteSearchEncorejobGetParamsStatus = "SUCCESSFUL"
)

// EncoreJobRequestBody defines model for EncoreJobRequestBody.
type EncoreJobRequestBody struct {
	// BaseName Base filename of output files
	BaseName string `json:"baseName"`

	// CompletedDate The time for when the EncoreJob was completed (fail or success)
	CompletedDate *time.Time `json:"completedDate"`

	// CreatedDate The Creation date for the EncoreJob
	CreatedDate *time.Time `json:"createdDate,omitempty"`

	// DebugOverlay Instruct Encore to overlay encoding metadata on the encoded video stream
	DebugOverlay bool `json:"debugOverlay"`

	// Duration Limit output to given duration.
	Duration *float64 `json:"duration"`

	// ExternalId External id - for external backreference
	ExternalId *string `json:"externalId"`

	// Id The Encore Internal EncoreJob Identity
	Id     *openapi_types.UUID `json:"id,omitempty"`
	Inputs []Input             `json:"inputs"`

	// LogContext Key/Values to append to the MDC log context
	LogContext map[string]string `json:"logContext"`

	// Message The exception message, if the EncoreJob failed
	Message *string `json:"message"`

	// Output Analyzed models of the output files
	Output *[]MediaFile `json:"output,omitempty"`

	// OutputFolder A directory path to where the output should be written
	OutputFolder string `json:"outputFolder"`

	// Priority The queue priority of the EncoreJob
	Priority int32 `json:"priority"`

	// Profile The name of the encoding profile to use
	Profile string `json:"profile"`

	// ProfileParams Properties for evaluation of spring spel expressions in profile
	ProfileParams map[string]map[string]interface{} `json:"profileParams"`

	// Progress The EncoreJob progress
	Progress *int32 `json:"progress,omitempty"`

	// ProgressCallbackUri An url to which the progress status callback should be directed
	ProgressCallbackUri *string `json:"progressCallbackUri"`

	// SeekTo Seek to given time in seconds before encoding output.
	SeekTo *float64 `json:"seekTo"`

	// SegmentLength Transcode segments of specified length in seconds in parallell. Should be a multiple of target GOP.
	SegmentLength *float64 `json:"segmentLength"`

	// Speed The Encoding speed of the job (compared to it's play speed/input duration)
	Speed *float64 `json:"speed"`

	// StartedDate The time for when the EncoreJob was picked from the queue)
	StartedDate *time.Time `json:"startedDate"`

	// Status The Job Status
	Status *EncoreJobRequestBodyStatus `json:"status,omitempty"`

	// ThumbnailTime Time in seconds for when the thumbnail should be picked. Overrides profile configuration for thumbnails
	ThumbnailTime *float64 `json:"thumbnailTime"`
}

// EncoreJobRequestBodyStatus The Job Status
type EncoreJobRequestBodyStatus string

// EntityModelEncoreJob defines model for EntityModelEncoreJob.
type EntityModelEncoreJob struct {
	Links map[string]Link `json:"_links,omitempty"`

	// BaseName Base filename of output files
	BaseName string `json:"baseName"`

	// CompletedDate The time for when the EncoreJob was completed (fail or success)
	CompletedDate *time.Time `json:"completedDate"`

	// CreatedDate The Creation date for the EncoreJob
	CreatedDate *time.Time `json:"createdDate,omitempty"`

	// DebugOverlay Instruct Encore to overlay encoding metadata on the encoded video stream
	DebugOverlay bool `json:"debugOverlay"`

	// Duration Limit output to given duration.
	Duration *float64 `json:"duration"`

	// ExternalId External id - for external backreference
	ExternalId *string `json:"externalId"`

	// Id The Encore Internal EncoreJob Identity
	Id     *openapi_types.UUID `json:"id,omitempty"`
	Inputs []Input             `json:"inputs"`

	// LogContext Key/Values to append to the MDC log context
	LogContext map[string]string `json:"logContext"`

	// Message The exception message, if the EncoreJob failed
	Message *string `json:"message"`

	// Output Analyzed models of the output files
	Output *[]MediaFile `json:"output,omitempty"`

	// OutputFolder A directory path to where the output should be written
	OutputFolder string `json:"outputFolder"`

	// Priority The queue priority of the EncoreJob
	Priority int32 `json:"priority"`

	// Profile The name of the encoding profile to use
	Profile string `json:"profile"`

	// ProfileParams Properties for evaluation of spring spel expressions in profile
	ProfileParams map[string]map[string]interface{} `json:"profileParams"`

	// Progress The EncoreJob progress
	Progress *int32 `json:"progress,omitempty"`

	// ProgressCallbackUri An url to which the progress status callback should be directed
	ProgressCallbackUri *string `json:"progressCallbackUri"`

	// SeekTo Seek to given time in seconds before encoding output.
	SeekTo *float64 `json:"seekTo"`

	// SegmentLength Transcode segments of specified length in seconds in parallell. Should be a multiple of target GOP.
	SegmentLength *float64 `json:"segmentLength"`

	// Speed The Encoding speed of the job (compared to it's play speed/input duration)
	Speed *float64 `json:"speed"`

	// StartedDate The time for when the EncoreJob was picked from the queue)
	StartedDate *time.Time `json:"startedDate"`

	// Status The Job Status
	Status *EntityModelEncoreJobStatus `json:"status,omitempty"`

	// ThumbnailTime Time in seconds for when the thumbnail should be picked. Overrides profile configuration for thumbnails
	ThumbnailTime *float64 `json:"thumbnailTime"`
}

// EntityModelEncoreJobStatus The Job Status
type EntityModelEncoreJobStatus string

// Input defines model for Input.
type Input struct {
	// Analyzed Analyzed models of the output files
	Analyzed *MediaFile `json:"analyzed,omitempty"`
	CopyTs   bool       `json:"copyTs"`

	// Params Input params required to properly decode input
	Params map[string]string `json:"params"`

	// SeekTo Seek to given time in seconds before decoding input. Faster than output seek (seekTo in encoreJob) but accuracy may depend on type of input. For some inputs a combination of the two might be preferred
	SeekTo *float64 `json:"seekTo"`

	// Type Type of input
	Type InputType `json:"type"`

	// Uri URI of input file
	Uri string `json:"uri"`
}

// InputType Type of input
type InputType string

// Link defines model for Link.
type Link struct {
	Deprecation *string `json:"deprecation,omitempty"`
	Href        *string `json:"href,omitempty"`
	Hreflang    *string `json:"hreflang,omitempty"`
	Name        *string `json:"name,omitempty"`
	Profile     *string `json:"profile,omitempty"`
	Templated   *bool   `json:"templated,omitempty"`
	Title       *string `json:"title,omitempty"`
	Type        *string `json:"type,omitempty"`
}

// MediaFile Analyzed models of the output files
type MediaFile struct {
	File     string `json:"file"`
	FileSize int64  `json:"fileSize"`
	Format   string `json:"format"`
	Type     string `json:"type"`
}

// PageMetadata defines model for PageMetadata.
type PageMetadata struct {
	Number        *int64 `json:"number,omitempty"`
	Size          *int64 `json:"size,omitempty"`
	TotalElements *int64 `json:"totalElements,omitempty"`
	TotalPages    *int64 `json:"totalPages,omitempty"`
}

// PagedModelEntityModelEncoreJob defines model for PagedModelEntityModelEncoreJob.
type PagedModelEntityModelEncoreJob struct {
	Embedded *struct {
		EncoreJobs *[]EntityModelEncoreJob `json:"encoreJobs,omitempty"`
	} `json:"_embedded,omitempty"`
	Links map[string]Link       `json:"_links,omitempty"`
	Page  *PageMetadata `json:"page,omitempty"`
}

// QueueItem defines model for QueueItem.
type QueueItem struct {
	Created  time.Time `json:"created"`
	Id       string    `json:"id"`
	Priority int32     `json:"priority"`
	Segment  *int32    `json:"segment,omitempty"`
}

// GetCollectionResourceEncorejobGet1Params defines parameters for GetCollectionResourceEncorejobGet1.
type GetCollectionResourceEncorejobGet1Params struct {
	// Page Zero-based page index (0..N)
	Page *int `form:"page,omitempty" json:"page,omitempty"`

	// Size The size of the page to be returned
	Size *int `form:"size,omitempty" json:"size,omitempty"`

	// Sort Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// ExecuteSearchEncorejobGetParams defines parameters for ExecuteSearchEncorejobGet.
type ExecuteSearchEncorejobGetParams struct {
	Status *ExecuteSearchEncorejobGetParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// Page Zero-based page index (0..N)
	Page *int `form:"page,omitempty" json:"page,omitempty"`

	// Size The size of the page to be returned
	Size *int `form:"size,omitempty" json:"size,omitempty"`

	// Sort Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// ExecuteSearchEncorejobGetParamsStatus defines parameters for ExecuteSearchEncorejobGet.
type ExecuteSearchEncorejobGetParamsStatus string

// PostCollectionResourceEncorejobPostJSONRequestBody defines body for PostCollectionResourceEncorejobPost for application/json ContentType.
type PostCollectionResourceEncorejobPostJSONRequestBody = EncoreJobRequestBody

// PatchItemResourceEncorejobPatchJSONRequestBody defines body for PatchItemResourceEncorejobPatch for application/json ContentType.
type PatchItemResourceEncorejobPatchJSONRequestBody = EncoreJobRequestBody

// PutItemResourceEncorejobPutJSONRequestBody defines body for PutItemResourceEncorejobPut for application/json ContentType.
type PutItemResourceEncorejobPutJSONRequestBody = EncoreJobRequestBody
